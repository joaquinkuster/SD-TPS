syntax = "proto3";
package kv;

// El paquete Go donde se generarán los stubs:
option go_package = "./proto";

// -------------------------
// 1) Mensajes Cliente ↔ Coordinador
// -------------------------

// Solicitud para Obtener valor según una clave.
message SolicitudObtener {
 string clave = 1;
}

// Respuesta de Obtener: contiene valor (bytes), reloj vectorial y flag “existe”.
message RespuestaObtener {
 bytes valor = 1;
 bytes relojVector = 2; // Reloj vectorial serializado
 bool existe = 3;
}

// Solicitud para Guardar (clave, valor).
// El campo relojVector solo se usa si el cliente trae su propio vector; puede quedar vacío.
message SolicitudGuardar {
 string clave = 1;
 bytes valor = 2;
 bytes relojVector = 3;
}

// Respuesta de Guardar: éxito y el nuevo reloj vectorial de la réplica primaria.
message RespuestaGuardar {
 bool exito = 1;
 bytes nuevoRelojVector = 2;
}

// Solicitud para Eliminar una clave.
message SolicitudEliminar {
 string clave = 1;
 bytes relojVector = 2;
}

// Respuesta de Eliminar: éxito y nuevo reloj vectorial.
message RespuestaEliminar {
 bool exito = 1;
 bytes nuevoRelojVector = 2;
}

// -------------------------
// 2) Servicio Coordinador
// -------------------------

service Coordinador {
 rpc Obtener (SolicitudObtener) returns (RespuestaObtener) {}
 rpc Guardar (SolicitudGuardar) returns (RespuestaGuardar) {}
 rpc Eliminar (SolicitudEliminar) returns (RespuestaEliminar) {}
}

// -------------------------
// 3) Mensajes y servicio para replicación interna
// -------------------------
// Tipo de mutación: GUARDAR o ELIMINAR.

message Mutacion {
 enum Tipo {
 GUARDAR = 0;
 ELIMINAR = 1;
 }
 Tipo tipo = 1;
 string clave = 2;
 bytes valor = 3; // Solo para GUARDAR
 bytes relojVector = 4; // Reloj vectorial que asigna la réplica origen
}

// Reconocimiento que envía la réplica destino
message Reconocimiento {
 bool ok = 1;
 bytes relojVectorAck = 2; // Reloj vectorial actualizado de la réplica destino
}

// Servicio que expone cada Réplica para recibir mutaciones
service Replica {
 rpc ReplicarMutacion (Mutacion) returns (Reconocimiento) {}
 // Métodos locales para que el Coordinador invoque
 rpc ObtenerLocal (SolicitudObtener) returns (RespuestaObtener) {}
 rpc GuardarLocal (SolicitudGuardar) returns (RespuestaGuardar) {}
 rpc EliminarLocal (SolicitudEliminar) returns (RespuestaEliminar) {}
}